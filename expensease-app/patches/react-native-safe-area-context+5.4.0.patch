diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNCSafeAreaProviderManagerDelegate.java b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNCSafeAreaProviderManagerDelegate.java
new file mode 100644
index 0000000..cf7bde6
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNCSafeAreaProviderManagerDelegate.java
@@ -0,0 +1,26 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNCSafeAreaProviderManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNCSafeAreaProviderManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNCSafeAreaProviderManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    super.setProperty(view, propName, value);
+  }
+}
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNCSafeAreaProviderManagerInterface.java b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNCSafeAreaProviderManagerInterface.java
new file mode 100644
index 0000000..f7a15f6
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNCSafeAreaProviderManagerInterface.java
@@ -0,0 +1,17 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import com.facebook.react.uimanager.ViewManagerWithGeneratedInterface;
+
+public interface RNCSafeAreaProviderManagerInterface<T extends View> extends ViewManagerWithGeneratedInterface {
+  // No props
+}
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNCSafeAreaViewManagerDelegate.java b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNCSafeAreaViewManagerDelegate.java
new file mode 100644
index 0000000..c4a0d3c
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNCSafeAreaViewManagerDelegate.java
@@ -0,0 +1,36 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ReadableMap;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNCSafeAreaViewManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNCSafeAreaViewManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNCSafeAreaViewManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "mode":
+        mViewManager.setMode(view, (String) value);
+        break;
+      case "edges":
+        mViewManager.setEdges(view, (ReadableMap) value);
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNCSafeAreaViewManagerInterface.java b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNCSafeAreaViewManagerInterface.java
new file mode 100644
index 0000000..c65669c
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNCSafeAreaViewManagerInterface.java
@@ -0,0 +1,20 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ReadableMap;
+import com.facebook.react.uimanager.ViewManagerWithGeneratedInterface;
+
+public interface RNCSafeAreaViewManagerInterface<T extends View> extends ViewManagerWithGeneratedInterface {
+  void setMode(T view, @Nullable String value);
+  void setEdges(T view, @Nullable ReadableMap value);
+}
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/java/com/th3rdwave/safeareacontext/NativeSafeAreaContextSpec.java b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/java/com/th3rdwave/safeareacontext/NativeSafeAreaContextSpec.java
new file mode 100644
index 0000000..e89b0db
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/java/com/th3rdwave/safeareacontext/NativeSafeAreaContextSpec.java
@@ -0,0 +1,65 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJavaSpec.js
+ *
+ * @nolint
+ */
+
+package com.th3rdwave.safeareacontext;
+
+import com.facebook.proguard.annotations.DoNotStrip;
+import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.react.bridge.ReactContextBaseJavaModule;
+import com.facebook.react.bridge.ReactMethod;
+import com.facebook.react.common.build.ReactBuildConfig;
+import com.facebook.react.turbomodule.core.interfaces.TurboModule;
+import java.util.Arrays;
+import java.util.HashSet;
+import java.util.Map;
+import java.util.Set;
+import javax.annotation.Nonnull;
+import javax.annotation.Nullable;
+
+public abstract class NativeSafeAreaContextSpec extends ReactContextBaseJavaModule implements TurboModule {
+  public static final String NAME = "RNCSafeAreaContext";
+
+  public NativeSafeAreaContextSpec(ReactApplicationContext reactContext) {
+    super(reactContext);
+  }
+
+  @Override
+  public @Nonnull String getName() {
+    return NAME;
+  }
+
+  protected abstract Map<String, Object> getTypedExportedConstants();
+
+  @Override
+  @DoNotStrip
+  public final @Nullable Map<String, Object> getConstants() {
+    Map<String, Object> constants = getTypedExportedConstants();
+    if (ReactBuildConfig.DEBUG || ReactBuildConfig.IS_INTERNAL_BUILD) {
+      Set<String> obligatoryFlowConstants = new HashSet<>();
+      Set<String> optionalFlowConstants = new HashSet<>(Arrays.asList(
+          "initialWindowMetrics"
+      ));
+      Set<String> undeclaredConstants = new HashSet<>(constants.keySet());
+      undeclaredConstants.removeAll(obligatoryFlowConstants);
+      undeclaredConstants.removeAll(optionalFlowConstants);
+      if (!undeclaredConstants.isEmpty()) {
+        throw new IllegalStateException(String.format("Native Module Flow doesn't declare constants: %s", undeclaredConstants));
+      }
+      undeclaredConstants = obligatoryFlowConstants;
+      undeclaredConstants.removeAll(constants.keySet());
+      if (!undeclaredConstants.isEmpty()) {
+        throw new IllegalStateException(String.format("Native Module doesn't fill in constants: %s", undeclaredConstants));
+      }
+    }
+    return constants;
+  }
+}
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/CMakeLists.txt b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/CMakeLists.txt
new file mode 100644
index 0000000..a366900
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/CMakeLists.txt
@@ -0,0 +1,36 @@
+# Copyright (c) Meta Platforms, Inc. and affiliates.
+#
+# This source code is licensed under the MIT license found in the
+# LICENSE file in the root directory of this source tree.
+
+cmake_minimum_required(VERSION 3.13)
+set(CMAKE_VERBOSE_MAKEFILE on)
+
+file(GLOB react_codegen_SRCS CONFIGURE_DEPENDS *.cpp react/renderer/components/safeareacontext/*.cpp)
+
+add_library(
+  react_codegen_safeareacontext
+  OBJECT
+  ${react_codegen_SRCS}
+)
+
+target_include_directories(react_codegen_safeareacontext PUBLIC . react/renderer/components/safeareacontext)
+
+target_link_libraries(
+  react_codegen_safeareacontext
+  fbjni
+  jsi
+  # We need to link different libraries based on whether we are building rncore or not, that's necessary
+  # because we want to break a circular dependency between react_codegen_rncore and reactnative
+  reactnative
+)
+
+target_compile_options(
+  react_codegen_safeareacontext
+  PRIVATE
+  -DLOG_TAG=\"ReactNative\"
+  -fexceptions
+  -frtti
+  -std=c++20
+  -Wall
+)
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/ComponentDescriptors.cpp b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/ComponentDescriptors.cpp
new file mode 100644
index 0000000..bcb25da
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/ComponentDescriptors.cpp
@@ -0,0 +1,22 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateComponentDescriptorCpp.js
+ */
+
+#include <react/renderer/components/safeareacontext/ComponentDescriptors.h>
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+
+namespace facebook::react {
+
+void safeareacontext_registerComponentDescriptorsFromCodegen(
+  std::shared_ptr<const ComponentDescriptorProviderRegistry> registry) {
+registry->add(concreteComponentDescriptorProvider<RNCSafeAreaProviderComponentDescriptor>());
+}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/ComponentDescriptors.h b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/ComponentDescriptors.h
new file mode 100644
index 0000000..bafa971
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/ComponentDescriptors.h
@@ -0,0 +1,24 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateComponentDescriptorH.js
+ */
+
+#pragma once
+
+#include <react/renderer/components/safeareacontext/ShadowNodes.h>
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+
+namespace facebook::react {
+
+using RNCSafeAreaProviderComponentDescriptor = ConcreteComponentDescriptor<RNCSafeAreaProviderShadowNode>;
+
+void safeareacontext_registerComponentDescriptorsFromCodegen(
+  std::shared_ptr<const ComponentDescriptorProviderRegistry> registry);
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/EventEmitters.cpp b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/EventEmitters.cpp
new file mode 100644
index 0000000..3e01eb7
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/EventEmitters.cpp
@@ -0,0 +1,40 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateEventEmitterCpp.js
+ */
+
+#include <react/renderer/components/safeareacontext/EventEmitters.h>
+
+
+namespace facebook::react {
+
+void RNCSafeAreaProviderEventEmitter::onInsetsChange(OnInsetsChange $event) const {
+  dispatchEvent("insetsChange", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto insets = jsi::Object(runtime);
+  insets.setProperty(runtime, "top", $event.insets.top);
+  insets.setProperty(runtime, "right", $event.insets.right);
+  insets.setProperty(runtime, "bottom", $event.insets.bottom);
+  insets.setProperty(runtime, "left", $event.insets.left);
+  $payload.setProperty(runtime, "insets", insets);
+}
+{
+  auto frame = jsi::Object(runtime);
+  frame.setProperty(runtime, "x", $event.frame.x);
+  frame.setProperty(runtime, "y", $event.frame.y);
+  frame.setProperty(runtime, "width", $event.frame.width);
+  frame.setProperty(runtime, "height", $event.frame.height);
+  $payload.setProperty(runtime, "frame", frame);
+}
+    return $payload;
+  });
+}
+
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/EventEmitters.h b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/EventEmitters.h
new file mode 100644
index 0000000..773e345
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/EventEmitters.h
@@ -0,0 +1,47 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateEventEmitterH.js
+ */
+#pragma once
+
+#include <react/renderer/components/view/ViewEventEmitter.h>
+
+
+namespace facebook::react {
+class RNCSafeAreaProviderEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnInsetsChangeInsets {
+      double top;
+    double right;
+    double bottom;
+    double left;
+    };
+
+  struct OnInsetsChangeFrame {
+      double x;
+    double y;
+    double width;
+    double height;
+    };
+
+  struct OnInsetsChange {
+      OnInsetsChangeInsets insets;
+    OnInsetsChangeFrame frame;
+    };
+  void onInsetsChange(OnInsetsChange value) const;
+};
+class RNCSafeAreaViewEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+} // namespace facebook::react
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/Props.cpp b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/Props.cpp
new file mode 100644
index 0000000..b1d3a83
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/Props.cpp
@@ -0,0 +1,33 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GeneratePropsCpp.js
+ */
+
+#include <react/renderer/components/safeareacontext/Props.h>
+#include <react/renderer/core/PropsParserContext.h>
+#include <react/renderer/core/propsConversions.h>
+
+namespace facebook::react {
+
+RNCSafeAreaProviderProps::RNCSafeAreaProviderProps(
+    const PropsParserContext &context,
+    const RNCSafeAreaProviderProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps)
+
+    
+      {}
+RNCSafeAreaViewProps::RNCSafeAreaViewProps(
+    const PropsParserContext &context,
+    const RNCSafeAreaViewProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    mode(convertRawProp(context, rawProps, "mode", sourceProps.mode, {RNCSafeAreaViewMode::Padding})),
+    edges(convertRawProp(context, rawProps, "edges", sourceProps.edges, {}))
+      {}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/Props.h b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/Props.h
new file mode 100644
index 0000000..102e8f6
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/Props.h
@@ -0,0 +1,85 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GeneratePropsH.js
+ */
+#pragma once
+
+#include <react/renderer/components/view/ViewProps.h>
+#include <react/renderer/core/PropsParserContext.h>
+#include <react/renderer/core/propsConversions.h>
+
+namespace facebook::react {
+
+class RNCSafeAreaProviderProps final : public ViewProps {
+ public:
+  RNCSafeAreaProviderProps() = default;
+  RNCSafeAreaProviderProps(const PropsParserContext& context, const RNCSafeAreaProviderProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  
+};
+
+enum class RNCSafeAreaViewMode { Padding, Margin };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNCSafeAreaViewMode &result) {
+  auto string = (std::string)value;
+  if (string == "padding") { result = RNCSafeAreaViewMode::Padding; return; }
+  if (string == "margin") { result = RNCSafeAreaViewMode::Margin; return; }
+  abort();
+}
+
+static inline std::string toString(const RNCSafeAreaViewMode &value) {
+  switch (value) {
+    case RNCSafeAreaViewMode::Padding: return "padding";
+    case RNCSafeAreaViewMode::Margin: return "margin";
+  }
+}
+struct RNCSafeAreaViewEdgesStruct {
+  std::string top{};
+  std::string right{};
+  std::string bottom{};
+  std::string left{};
+};
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNCSafeAreaViewEdgesStruct &result) {
+  auto map = (std::unordered_map<std::string, RawValue>)value;
+
+  auto tmp_top = map.find("top");
+  if (tmp_top != map.end()) {
+    fromRawValue(context, tmp_top->second, result.top);
+  }
+  auto tmp_right = map.find("right");
+  if (tmp_right != map.end()) {
+    fromRawValue(context, tmp_right->second, result.right);
+  }
+  auto tmp_bottom = map.find("bottom");
+  if (tmp_bottom != map.end()) {
+    fromRawValue(context, tmp_bottom->second, result.bottom);
+  }
+  auto tmp_left = map.find("left");
+  if (tmp_left != map.end()) {
+    fromRawValue(context, tmp_left->second, result.left);
+  }
+}
+
+static inline std::string toString(const RNCSafeAreaViewEdgesStruct &value) {
+  return "[Object RNCSafeAreaViewEdgesStruct]";
+}
+class RNCSafeAreaViewProps final : public ViewProps {
+ public:
+  RNCSafeAreaViewProps() = default;
+  RNCSafeAreaViewProps(const PropsParserContext& context, const RNCSafeAreaViewProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  RNCSafeAreaViewMode mode{RNCSafeAreaViewMode::Padding};
+  RNCSafeAreaViewEdgesStruct edges{};
+};
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/ShadowNodes.cpp b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/ShadowNodes.cpp
new file mode 100644
index 0000000..92f118d
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/ShadowNodes.cpp
@@ -0,0 +1,17 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateShadowNodeCpp.js
+ */
+
+#include <react/renderer/components/safeareacontext/ShadowNodes.h>
+
+namespace facebook::react {
+
+extern const char RNCSafeAreaProviderComponentName[] = "RNCSafeAreaProvider";
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/ShadowNodes.h b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/ShadowNodes.h
new file mode 100644
index 0000000..1672b82
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/ShadowNodes.h
@@ -0,0 +1,32 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateShadowNodeH.js
+ */
+
+#pragma once
+
+#include <react/renderer/components/safeareacontext/EventEmitters.h>
+#include <react/renderer/components/safeareacontext/Props.h>
+#include <react/renderer/components/safeareacontext/States.h>
+#include <react/renderer/components/view/ConcreteViewShadowNode.h>
+#include <jsi/jsi.h>
+
+namespace facebook::react {
+
+JSI_EXPORT extern const char RNCSafeAreaProviderComponentName[];
+
+/*
+ * `ShadowNode` for <RNCSafeAreaProvider> component.
+ */
+using RNCSafeAreaProviderShadowNode = ConcreteViewShadowNode<
+    RNCSafeAreaProviderComponentName,
+    RNCSafeAreaProviderProps,
+    RNCSafeAreaProviderEventEmitter,
+    RNCSafeAreaProviderState>;
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/States.cpp b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/States.cpp
new file mode 100644
index 0000000..4501271
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/States.cpp
@@ -0,0 +1,16 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateStateCpp.js
+ */
+#include <react/renderer/components/safeareacontext/States.h>
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/States.h b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/States.h
new file mode 100644
index 0000000..0bd21b6
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/States.h
@@ -0,0 +1,29 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateStateH.js
+ */
+#pragma once
+
+#ifdef ANDROID
+#include <folly/dynamic.h>
+#endif
+
+namespace facebook::react {
+
+class RNCSafeAreaProviderState {
+public:
+  RNCSafeAreaProviderState() = default;
+
+#ifdef ANDROID
+  RNCSafeAreaProviderState(RNCSafeAreaProviderState const &previousState, folly::dynamic data){};
+  folly::dynamic getDynamic() const {
+    return {};
+  };
+#endif
+};
+
+} // namespace facebook::react
\ No newline at end of file
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/safeareacontextJSI-generated.cpp b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/safeareacontextJSI-generated.cpp
new file mode 100644
index 0000000..bce094c
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/safeareacontextJSI-generated.cpp
@@ -0,0 +1,26 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleCpp.js
+ */
+
+#include "safeareacontextJSI.h"
+
+namespace facebook::react {
+
+static jsi::Value __hostFunction_NativeSafeAreaContextCxxSpecJSI_getConstants(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeSafeAreaContextCxxSpecJSI *>(&turboModule)->getConstants(
+    rt
+  );
+}
+
+NativeSafeAreaContextCxxSpecJSI::NativeSafeAreaContextCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
+  : TurboModule("RNCSafeAreaContext", jsInvoker) {
+  methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeSafeAreaContextCxxSpecJSI_getConstants};
+}
+
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/safeareacontextJSI.h b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/safeareacontextJSI.h
new file mode 100644
index 0000000..d79568d
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/react/renderer/components/safeareacontext/safeareacontextJSI.h
@@ -0,0 +1,71 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleH.js
+ */
+
+#pragma once
+
+#include <ReactCommon/TurboModule.h>
+#include <react/bridging/Bridging.h>
+
+namespace facebook::react {
+
+
+  class JSI_EXPORT NativeSafeAreaContextCxxSpecJSI : public TurboModule {
+protected:
+  NativeSafeAreaContextCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);
+
+public:
+  virtual jsi::Object getConstants(jsi::Runtime &rt) = 0;
+
+};
+
+template <typename T>
+class JSI_EXPORT NativeSafeAreaContextCxxSpec : public TurboModule {
+public:
+  jsi::Value create(jsi::Runtime &rt, const jsi::PropNameID &propName) override {
+    return delegate_.create(rt, propName);
+  }
+
+  std::vector<jsi::PropNameID> getPropertyNames(jsi::Runtime& runtime) override {
+    return delegate_.getPropertyNames(runtime);
+  }
+
+  static constexpr std::string_view kModuleName = "RNCSafeAreaContext";
+
+protected:
+  NativeSafeAreaContextCxxSpec(std::shared_ptr<CallInvoker> jsInvoker)
+    : TurboModule(std::string{NativeSafeAreaContextCxxSpec::kModuleName}, jsInvoker),
+      delegate_(reinterpret_cast<T*>(this), jsInvoker) {}
+
+
+private:
+  class Delegate : public NativeSafeAreaContextCxxSpecJSI {
+  public:
+    Delegate(T *instance, std::shared_ptr<CallInvoker> jsInvoker) :
+      NativeSafeAreaContextCxxSpecJSI(std::move(jsInvoker)), instance_(instance) {
+
+    }
+
+    jsi::Object getConstants(jsi::Runtime &rt) override {
+      static_assert(
+          bridging::getParameterCount(&T::getConstants) == 1,
+          "Expected getConstants(...) to have 1 parameters");
+
+      return bridging::callFromJs<jsi::Object>(
+          rt, &T::getConstants, jsInvoker_, instance_);
+    }
+
+  private:
+    friend class NativeSafeAreaContextCxxSpec;
+    T *instance_;
+  };
+
+  Delegate delegate_;
+};
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/safeareacontext-generated.cpp b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/safeareacontext-generated.cpp
new file mode 100644
index 0000000..418cb53
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/safeareacontext-generated.cpp
@@ -0,0 +1,32 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJniCpp.js
+ */
+
+#include "safeareacontext.h"
+
+namespace facebook::react {
+
+static facebook::jsi::Value __hostFunction_NativeSafeAreaContextSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count, cachedMethodId);
+}
+
+NativeSafeAreaContextSpecJSI::NativeSafeAreaContextSpecJSI(const JavaTurboModule::InitParams &params)
+  : JavaTurboModule(params) {
+  methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeSafeAreaContextSpecJSI_getConstants};
+}
+
+std::shared_ptr<TurboModule> safeareacontext_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
+  if (moduleName == "RNCSafeAreaContext") {
+    return std::make_shared<NativeSafeAreaContextSpecJSI>(params);
+  }
+  return nullptr;
+}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/safeareacontext.h b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/safeareacontext.h
new file mode 100644
index 0000000..ac8ba8f
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/jni/safeareacontext.h
@@ -0,0 +1,31 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJniH.js
+ */
+
+#pragma once
+
+#include <ReactCommon/JavaTurboModule.h>
+#include <ReactCommon/TurboModule.h>
+#include <jsi/jsi.h>
+
+namespace facebook::react {
+
+/**
+ * JNI C++ class for module 'NativeSafeAreaContext'
+ */
+class JSI_EXPORT NativeSafeAreaContextSpecJSI : public JavaTurboModule {
+public:
+  NativeSafeAreaContextSpecJSI(const JavaTurboModule::InitParams &params);
+};
+
+
+JSI_EXPORT
+std::shared_ptr<TurboModule> safeareacontext_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params);
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/schema.json b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/schema.json
new file mode 100644
index 0000000..1ef8a18
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/generated/source/codegen/schema.json
@@ -0,0 +1 @@
+{"modules":{"NativeSafeAreaContext":{"type":"NativeModule","aliasMap":{},"enumMap":{},"spec":{"eventEmitters":[],"methods":[{"name":"getConstants","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"ObjectTypeAnnotation","properties":[{"name":"initialWindowMetrics","optional":true,"typeAnnotation":{"type":"ObjectTypeAnnotation","properties":[{"name":"insets","optional":false,"typeAnnotation":{"type":"ObjectTypeAnnotation","properties":[{"name":"top","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}},{"name":"right","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}},{"name":"bottom","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}},{"name":"left","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}}]}},{"name":"frame","optional":false,"typeAnnotation":{"type":"ObjectTypeAnnotation","properties":[{"name":"x","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}},{"name":"y","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}},{"name":"width","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}},{"name":"height","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}}]}}]}}]},"params":[]}}]},"moduleName":"RNCSafeAreaContext"},"RNCSafeAreaProvider":{"type":"Component","components":{"RNCSafeAreaProvider":{"extendsProps":[{"type":"ReactNativeBuiltInType","knownTypeName":"ReactNativeCoreViewProps"}],"events":[{"name":"onInsetsChange","optional":true,"bubblingType":"direct","typeAnnotation":{"type":"EventTypeAnnotation","argument":{"type":"ObjectTypeAnnotation","properties":[{"name":"insets","optional":false,"typeAnnotation":{"type":"ObjectTypeAnnotation","properties":[{"name":"top","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}},{"name":"right","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}},{"name":"bottom","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}},{"name":"left","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}}]}},{"name":"frame","optional":false,"typeAnnotation":{"type":"ObjectTypeAnnotation","properties":[{"name":"x","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}},{"name":"y","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}},{"name":"width","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}},{"name":"height","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}}]}}]}}}],"props":[],"commands":[]}}},"RNCSafeAreaView":{"type":"Component","components":{"RNCSafeAreaView":{"interfaceOnly":true,"extendsProps":[{"type":"ReactNativeBuiltInType","knownTypeName":"ReactNativeCoreViewProps"}],"events":[],"props":[{"name":"mode","optional":true,"typeAnnotation":{"type":"StringEnumTypeAnnotation","default":"padding","options":["padding","margin"]}},{"name":"edges","optional":true,"typeAnnotation":{"type":"ObjectTypeAnnotation","properties":[{"name":"top","optional":false,"typeAnnotation":{"type":"StringTypeAnnotation","default":null}},{"name":"right","optional":false,"typeAnnotation":{"type":"StringTypeAnnotation","default":null}},{"name":"bottom","optional":false,"typeAnnotation":{"type":"StringTypeAnnotation","default":null}},{"name":"left","optional":false,"typeAnnotation":{"type":"StringTypeAnnotation","default":null}}]}}],"commands":[]}}}}}
\ No newline at end of file
diff --git a/node_modules/react-native-safe-area-context/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/AndroidManifest.xml b/node_modules/react-native-safe-area-context/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/AndroidManifest.xml
new file mode 100644
index 0000000..8e08c3f
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/AndroidManifest.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.th3rdwave.safeareacontext" >
+
+    <uses-sdk android:minSdkVersion="24" />
+
+</manifest>
\ No newline at end of file
diff --git a/node_modules/react-native-safe-area-context/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/output-metadata.json b/node_modules/react-native-safe-area-context/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/output-metadata.json
new file mode 100644
index 0000000..597d6e0
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/output-metadata.json
@@ -0,0 +1,18 @@
+{
+  "version": 3,
+  "artifactType": {
+    "type": "AAPT_FRIENDLY_MERGED_MANIFESTS",
+    "kind": "Directory"
+  },
+  "applicationId": "com.th3rdwave.safeareacontext",
+  "variantName": "debug",
+  "elements": [
+    {
+      "type": "SINGLE",
+      "filters": [],
+      "attributes": [],
+      "outputFile": "AndroidManifest.xml"
+    }
+  ],
+  "elementType": "File"
+}
\ No newline at end of file
diff --git a/node_modules/react-native-safe-area-context/android/build/intermediates/aar_metadata/debug/writeDebugAarMetadata/aar-metadata.properties b/node_modules/react-native-safe-area-context/android/build/intermediates/aar_metadata/debug/writeDebugAarMetadata/aar-metadata.properties
new file mode 100644
index 0000000..1211b1e
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/intermediates/aar_metadata/debug/writeDebugAarMetadata/aar-metadata.properties
@@ -0,0 +1,6 @@
+aarFormatVersion=1.0
+aarMetadataVersion=1.0
+minCompileSdk=1
+minCompileSdkExtension=0
+minAndroidGradlePluginVersion=1.0.0
+coreLibraryDesugaringEnabled=false
diff --git a/node_modules/react-native-safe-area-context/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties b/node_modules/react-native-safe-area-context/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties
new file mode 100644
index 0000000..a68c122
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties
@@ -0,0 +1 @@
+#Sun Sep 28 23:25:41 IST 2025
diff --git a/node_modules/react-native-safe-area-context/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml b/node_modules/react-native-safe-area-context/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml
new file mode 100644
index 0000000..90cac64
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/praneelbora/Documents/GitHub/Expensease/expensease/expensease-app/node_modules/react-native-safe-area-context/android/src/main/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main" generated-set="main$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/praneelbora/Documents/GitHub/Expensease/expensease/expensease-app/node_modules/react-native-safe-area-context/android/src/main/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/praneelbora/Documents/GitHub/Expensease/expensease/expensease-app/node_modules/react-native-safe-area-context/android/src/debug/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug" generated-set="debug$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/praneelbora/Documents/GitHub/Expensease/expensease/expensease-app/node_modules/react-native-safe-area-context/android/src/debug/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="generated$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/praneelbora/Documents/GitHub/Expensease/expensease/expensease-app/node_modules/react-native-safe-area-context/android/build/generated/res/resValues/debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="generated" generated-set="generated$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/praneelbora/Documents/GitHub/Expensease/expensease/expensease-app/node_modules/react-native-safe-area-context/android/build/generated/res/resValues/debug"/></dataSet><mergedItems/></merger>
\ No newline at end of file
diff --git a/node_modules/react-native-safe-area-context/android/build/intermediates/manifest_merge_blame_file/debug/processDebugManifest/manifest-merger-blame-debug-report.txt b/node_modules/react-native-safe-area-context/android/build/intermediates/manifest_merge_blame_file/debug/processDebugManifest/manifest-merger-blame-debug-report.txt
new file mode 100644
index 0000000..dd5af12
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/intermediates/manifest_merge_blame_file/debug/processDebugManifest/manifest-merger-blame-debug-report.txt
@@ -0,0 +1,7 @@
+1<?xml version="1.0" encoding="utf-8"?>
+2<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+3    package="com.th3rdwave.safeareacontext" >
+4
+5    <uses-sdk android:minSdkVersion="24" />
+6
+7</manifest>
diff --git a/node_modules/react-native-safe-area-context/android/build/intermediates/merged_manifest/debug/processDebugManifest/AndroidManifest.xml b/node_modules/react-native-safe-area-context/android/build/intermediates/merged_manifest/debug/processDebugManifest/AndroidManifest.xml
new file mode 100644
index 0000000..8e08c3f
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/intermediates/merged_manifest/debug/processDebugManifest/AndroidManifest.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.th3rdwave.safeareacontext" >
+
+    <uses-sdk android:minSdkVersion="24" />
+
+</manifest>
\ No newline at end of file
diff --git a/node_modules/react-native-safe-area-context/android/build/intermediates/navigation_json/debug/extractDeepLinksDebug/navigation.json b/node_modules/react-native-safe-area-context/android/build/intermediates/navigation_json/debug/extractDeepLinksDebug/navigation.json
new file mode 100644
index 0000000..0637a08
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/intermediates/navigation_json/debug/extractDeepLinksDebug/navigation.json
@@ -0,0 +1 @@
+[]
\ No newline at end of file
diff --git a/node_modules/react-native-safe-area-context/android/build/intermediates/nested_resources_validation_report/debug/generateDebugResources/nestedResourcesValidationReport.txt b/node_modules/react-native-safe-area-context/android/build/intermediates/nested_resources_validation_report/debug/generateDebugResources/nestedResourcesValidationReport.txt
new file mode 100644
index 0000000..08f4ebe
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/intermediates/nested_resources_validation_report/debug/generateDebugResources/nestedResourcesValidationReport.txt
@@ -0,0 +1 @@
+0 Warning/Error
\ No newline at end of file
diff --git a/node_modules/react-native-safe-area-context/android/build/outputs/logs/manifest-merger-debug-report.txt b/node_modules/react-native-safe-area-context/android/build/outputs/logs/manifest-merger-debug-report.txt
new file mode 100644
index 0000000..279aaa3
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/build/outputs/logs/manifest-merger-debug-report.txt
@@ -0,0 +1,17 @@
+-- Merging decision tree log ---
+manifest
+ADDED from /Users/praneelbora/Documents/GitHub/Expensease/expensease/expensease-app/node_modules/react-native-safe-area-context/android/src/main/AndroidManifest.xml:2:1-5:12
+INJECTED from /Users/praneelbora/Documents/GitHub/Expensease/expensease/expensease-app/node_modules/react-native-safe-area-context/android/src/main/AndroidManifest.xml:2:1-5:12
+	package
+		ADDED from /Users/praneelbora/Documents/GitHub/Expensease/expensease/expensease-app/node_modules/react-native-safe-area-context/android/src/main/AndroidManifest.xml:4:3-42
+		INJECTED from /Users/praneelbora/Documents/GitHub/Expensease/expensease/expensease-app/node_modules/react-native-safe-area-context/android/src/main/AndroidManifest.xml
+	xmlns:android
+		ADDED from /Users/praneelbora/Documents/GitHub/Expensease/expensease/expensease-app/node_modules/react-native-safe-area-context/android/src/main/AndroidManifest.xml:3:2-60
+uses-sdk
+INJECTED from /Users/praneelbora/Documents/GitHub/Expensease/expensease/expensease-app/node_modules/react-native-safe-area-context/android/src/main/AndroidManifest.xml reason: use-sdk injection requested
+INJECTED from /Users/praneelbora/Documents/GitHub/Expensease/expensease/expensease-app/node_modules/react-native-safe-area-context/android/src/main/AndroidManifest.xml
+INJECTED from /Users/praneelbora/Documents/GitHub/Expensease/expensease/expensease-app/node_modules/react-native-safe-area-context/android/src/main/AndroidManifest.xml
+	android:targetSdkVersion
+		INJECTED from /Users/praneelbora/Documents/GitHub/Expensease/expensease/expensease-app/node_modules/react-native-safe-area-context/android/src/main/AndroidManifest.xml
+	android:minSdkVersion
+		INJECTED from /Users/praneelbora/Documents/GitHub/Expensease/expensease/expensease-app/node_modules/react-native-safe-area-context/android/src/main/AndroidManifest.xml
diff --git a/node_modules/react-native-safe-area-context/android/src/main/AndroidManifest.xml b/node_modules/react-native-safe-area-context/android/src/main/AndroidManifest.xml
index f5da598..4b624d1 100644
--- a/node_modules/react-native-safe-area-context/android/src/main/AndroidManifest.xml
+++ b/node_modules/react-native-safe-area-context/android/src/main/AndroidManifest.xml
@@ -1,5 +1,4 @@
 
 <manifest
-	xmlns:android="http://schemas.android.com/apk/res/android"
-  package="com.th3rdwave.safeareacontext">
+	xmlns:android="http://schemas.android.com/apk/res/android">
 </manifest>
diff --git a/node_modules/react-native-safe-area-context/android/src/main/AndroidManifest.xml.bak b/node_modules/react-native-safe-area-context/android/src/main/AndroidManifest.xml.bak
new file mode 100644
index 0000000..f5da598
--- /dev/null
+++ b/node_modules/react-native-safe-area-context/android/src/main/AndroidManifest.xml.bak
@@ -0,0 +1,5 @@
+
+<manifest
+	xmlns:android="http://schemas.android.com/apk/res/android"
+  package="com.th3rdwave.safeareacontext">
+</manifest>
